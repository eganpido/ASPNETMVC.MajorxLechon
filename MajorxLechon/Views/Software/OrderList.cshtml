@*@model easyfis.Entities.MstUserForm*@
@{
    // =====================
    // User Rights Variables
    // =====================
    //var canAdd = Model.CanAdd;
    //var canEdit = Model.CanEdit;
    //var canDelete = Model.CanDelete;
    //var canLock = Model.CanLock;
    //var canUnlock = Model.CanUnlock;
    //var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/streetsmartLogo.ico">
    <title>Order List</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.bootstrap.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    @Styles.Render("~/Content/Software-css")
    <style>
        .calendar-button-reservationdetail {
            position: absolute;
            right: 14px;
            top: 52%;
            transform: translateY(-50%);
            font-size: 18px;
            background: transparent;
            border: none;
            color: #329494;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <div class="container">
                <h3>
                    🛵 Order List
                </h3>
            </div>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 50%">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="date-wrapper">
                                                <label for="startDateInput">From : </label>
                                                <input type="text" id="startDateInput" class="form-control custom-date" placeholder="Select date" />
                                                <button type="button" class="calendar-button" data-target="#startDateInput" tabindex="-1">📅</button>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="date-wrapper">
                                                <label for="endDateInput">To : </label>
                                                <input type="text" id="endDateInput" class="form-control custom-date" placeholder="Select date" />
                                                <button type="button" class="calendar-button" data-target="#endDateInput" tabindex="-1">📅</button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td style="width: 50%" align="right">
                                    <button class="btn btn-primary" id="btnOrderAdd" onclick="viewReservations()">👁️ View Reservations</button>
                                    <button class="btn btn-primary" id="btnOrderAdd" onclick="addOrder()">🞧 Add</button>
                                    <button class="btn btn-danger" id="btnOrderClose" onclick="closeOrder()">🗙 Close</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <table id="datagridList" class="table table-striped table-bordered">
                        <thead>
                            <tr class="selected">
                                <th></th>
                                <th>Order No.</th>
                                <th>Date</th>
                                <th>Del. Date</th>
                                <th>Del. Time</th>
                                <th>Customer Name</th>
                                <th>Amount</th>
                                <th>Locked</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </section>

            <!--
                View Reservation Modal
            -->
            <div class="modal fade" id="reservationModal" role="dialog">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Order Reservations</h4>
                        </div>
                        <div class="modal-body">
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 50%">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="date-wrapper">
                                                        <label for="startDateReservation">From : </label>
                                                        <input type="text" id="startDateReservation" class="form-control custom-date" placeholder="Select date" />
                                                        <button type="button" class="calendar-button" data-target="#startDateReservation" tabindex="-1">📅</button>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="date-wrapper">
                                                        <label for="endDateReservation">To : </label>
                                                        <input type="text" id="endDateReservation" class="form-control custom-date" placeholder="Select date" />
                                                        <button type="button" class="calendar-button" data-target="#endDateReservation" tabindex="-1">📅</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td style="width: 50%" align="right">
                                            <button id="btnViewReservationCloseModal" class="btn btn-danger" data-dismiss="modal">🗙 Close</button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <table id="datagridListReservation" class="table table-striped table-bordered">
                                <thead>
                                    <tr class="selected">
                                        <th></th>
                                        <th></th>
                                        <th>Res. No.</th>
                                        <th>Date</th>
                                        <th>Del. Date</th>
                                        <th>Del. Time</th>
                                        <th>Customer Name</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!--
                Reservation Detail Modal
            -->
            <div class="modal fade" id="resDetailModal" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">

                        <div class="modal-header">
                            <h4 class="modal-title" id="resDetailModalTitle">Reserve</h4>
                        </div>

                        <div class="modal-body">
                            <center><span id="resDetailModalLoading"></span></center>

                            <div id="resDetailModalContent">
                                <br />
                                <div class="tab-content">
                                    <form class="form-horizontal">

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Reservation No.</label>
                                            <div class="col-sm-3 col-xs-12">
                                                <input type="text" class="form-control" id="resDetailReservationNumber" placeholder="Reservation No. ..." />
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Reservation Date</label>
                                            <div class="col-sm-4 col-xs-12">
                                                <input type="text" id="resDetailReservedDate" class="form-control custom-date" placeholder="Select date" />
                                                <button type="button" class="calendar-button-reservationdetail" data-target="#resDetailReservedDate" tabindex="-1">📅</button>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Delivery Date</label>
                                            <div class="col-sm-4 col-xs-12">
                                                <input type="text" id="resDetailDeliveryDate" class="form-control custom-date" placeholder="Select date" />
                                                <button type="button" class="calendar-button-reservationdetail" data-target="#resDetailDeliveryDate" tabindex="-1">📅</button>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Delivery Time</label>
                                            <div class="col-sm-3 col-xs-12">
                                                <input type="text" class="form-control" id="resDetailDeliveryTime" placeholder="12:00 AM" />
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Delivery Address</label>
                                            <div class="col-sm-8 col-xs-12">
                                                <textarea id="resDetailAddress" class="textarea-custom form-control" rows="2" placeholder="Address..."></textarea>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Name</label>
                                            <div class="col-sm-8 col-xs-12">
                                                <input type="text" class="form-control" id="resDetailCustomerName" placeholder="Name..." />
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Order</label>
                                            <div class="col-sm-8 col-xs-12">
                                                <textarea id="resDetailOrder" class="textarea-custom form-control" rows="2" placeholder="Fill-in Order..."></textarea>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Contact No.</label>
                                            <div class="col-sm-5 col-xs-12">
                                                <input type="text" class="form-control" id="resDetailContactNumber" placeholder="Contact Number..." />
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Landmark</label>
                                            <div class="col-sm-8 col-xs-12">
                                                <textarea id="resDetailLandmark" class="textarea-custom form-control" rows="2" placeholder="Landmark..."></textarea>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-sm-3 col-xs-12">Look For</label>
                                            <div class="col-sm-6 col-xs-12">
                                                <input type="text" class="form-control" id="resDetailLookFor" placeholder="Look For..." />
                                            </div>
                                        </div>
                                        <br />
                                    </form>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button id="btnReservationDetailCloseModal" class="btn btn-danger" data-dismiss="modal">🗙 Close</button>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <!--
                Order Confirm Delete Modal
            -->
            <div class="modal fade" id="deleteOrderConfirm" role="dialog">
                <div class="modal-dialog modal-sm">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Delete</h4>
                        </div>
                        <div class="modal-body">
                            Delete Order?
                        </div>
                        <div class="modal-footer">
                            <button id="btnOrderConfirmDelete" class="btn btn-danger" onclick="confirmDeleteOrder()">🗑 Delete</button>
                            <button id="btnOrderCloseConfirmDelete" class="btn btn-primary" data-dismiss="modal">🗙 Cancel</button>
                        </div>
                    </div>
                </div>
            </div>

            <!--
                Order Reservation Confirm Delete Modal
            -->
            <div class="modal fade" id="deleteOrderReservationConfirm" role="dialog">
                <div class="modal-dialog modal-sm">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Delete</h4>
                        </div>
                        <div class="modal-body">
                            Delete Order Reservation?
                        </div>
                        <div class="modal-footer">
                            <button id="btnOrderReservationConfirmDelete" class="btn btn-danger" onclick="confirmDeleteReservation()">🗑 Delete</button>
                            <button id="btnOrderReservationCloseConfirmDelete" class="btn btn-primary" data-dismiss="modal">🗙 Cancel</button>
                        </div>
                    </div>
                </div>
            </div>

            <!--
                Add Order Confirm Modal
            -->
            <div class="modal fade" id="addOrderConfirmModal" role="dialog">
                <div class="modal-dialog modal-sm">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Add Order Confirmation</h4>
                        </div>
                        <div class="modal-body">
                            Confirm?
                        </div>
                        <div class="modal-footer">
                            <button id="btnConfirmAddOrder" class="btn btn-primary" onclick="confirmAddOrderReservation()">✅ Confirm</button>
                            <button id="btnConfirmCloseAddOrder" class="btn btn-danger" data-dismiss="modal">🗙 Cancel</button>
                        </div>
                    </div>
                </div>
            </div>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    @Scripts.Render("~/Scripts/Software-js")
    <script src="https://cdn.datatables.net/2.3.2/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.3.2/js/dataTables.bootstrap.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script type="text/javascript">
        var Id = 0;
        var reservationId = 0;
        var orderReservationId = 0;

        function populateOrder() {
            Loader.show();

            if ($.fn.DataTable.isDataTable('#datagridList')) {
                $('#datagridList').DataTable().clear().destroy();
            }

            $('#datagridList tbody').off('click');

            $('#datagridList tbody').on('click', 'tr', function () {
                $('#datagridList tbody tr').removeClass('selected');
                $(this).addClass('selected');
            });

            const startDate = $('#startDateInput').val();
            const endDate = $('#endDateInput').val();

            $('#datagridList').DataTable({
                ajax: {
                    url: '/api/order/list/' + startDate + "/" + endDate,
                    dataSrc: '',
                },
                columns: [
                    {
                        data: null,
                        className: 'text-center',
                        render: function (data, type, row) {
                            return '<button class="btn btn-primary btn-sm" onclick="editOrder(' + row.Id + ')">📝 Edit</button>';
                        }, width: '8%'
                    },
                    { data: 'OrderNumber', className: 'text-left' },
                    {
                        data: 'SalesDate',
                        render: function (data, type, row) {
                            if (!data) return '';
                            const date = new Date(data);
                            return date.getFullYear() + '-' +
                                String(date.getMonth() + 1).padStart(2, '0') + '-' +
                                String(date.getDate()).padStart(2, '0');
                        }, className: 'text-left'
                    },
                    {
                        data: 'DeliveryDate',
                        render: function (data, type, row) {
                            if (!data) return '';
                            const date = new Date(data);
                            return date.getFullYear() + '-' +
                                String(date.getMonth() + 1).padStart(2, '0') + '-' +
                                String(date.getDate()).padStart(2, '0');
                        }, className: 'text-left'
                    },
                    { data: 'DeliveryTime' },
                    { data: 'CustomerName', width: '20%' },
                    {
                        data: 'Amount',
                        render: function (data, type, row) {
                            if (type === 'display') {
                                return parseFloat(data).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                            }
                            return data;
                        }
                    },
                    {
                        data: 'IsLocked',
                        className: 'dt-checkboxes',
                        render: function (data) {
                            return '<input type="checkbox" ' + (data ? 'checked' : '') + ' disabled>';
                        }
                    },
                    {
                        data: null,
                        className: 'text-center',
                        render: function (data, type, row) {
                            return '<button class="btn btn-danger btn-sm" onclick="deleteOrder(' + row.Id + ', ' + row.IsLocked + ')">🗑 Delete</button>';
                        }, width: '8%'
                    }
                ],
                columnDefs: [
                    {
                        targets: 1,
                        className: 'text-left'
                    },
                    {
                        targets: [0, 8],
                        orderable: false
                    }
                ],
                pageLength: 10,
                responsive: true,
                language: {
                    search: "Search:  ",
                    emptyTable: "No record(s) available",
                    "lengthMenu": "_MENU_ Records per page",
                    "info": "_START_ - _END_ of _TOTAL_ record(s) is displayed"
                }
            });

            setTimeout(() => {
                Loader.hide();
            }, 1000);
        }
        function populateReservation() {
            Loader.show();

            if ($.fn.DataTable.isDataTable('#datagridListReservation')) {
                $('#datagridListReservation').DataTable().clear().destroy();
            }

            $('#datagridListReservation tbody').off('click');

            $('#datagridListReservation tbody').on('click', 'tr', function () {
                $('#datagridListReservation tbody tr').removeClass('selected');
                $(this).addClass('selected');
            });

            const startDate = $('#startDateReservation').val();
            const endDate = $('#endDateReservation').val();

            $('#datagridListReservation').DataTable({
                ajax: {
                    url: '/api/reservation/list/' + startDate + "/" + endDate,
                    dataSrc: '',
                },
                columns: [
                    {
                        data: null,
                        className: 'text-center',
                        render: function (data, type, row) {
                            return '<button class="btn btn-primary btn-sm" onclick="viewReservationDetail(' + row.Id + ')">👁️ View</button>';
                        }, width: '8%'
                    },
                    {
                        data: null,
                        className: 'text-center',
                        render: function (data, type, row) {
                            return '<button class="btn btn-primary btn-sm" onclick="addOrderReservation(' + row.Id + ')">🞧 Add Order</button>';
                        }, width: '8%'
                    },
                    { data: 'ReservationNumber', className: 'text-left' },
                    {
                        data: 'ReservedDate',
                        render: function (data, type, row) {
                            if (!data) return '';
                            const date = new Date(data);
                            return date.getFullYear() + '-' +
                                String(date.getMonth() + 1).padStart(2, '0') + '-' +
                                String(date.getDate()).padStart(2, '0');
                        }, className: 'text-left'
                    },
                    {
                        data: 'DeliveryDate',
                        render: function (data, type, row) {
                            if (!data) return '';
                            const date = new Date(data);
                            return date.getFullYear() + '-' +
                                String(date.getMonth() + 1).padStart(2, '0') + '-' +
                                String(date.getDate()).padStart(2, '0');
                        }, className: 'text-left'
                    },
                    { data: 'DeliveryTime' },
                    { data: 'CustomerName', width: '20%' },
                    {
                        data: null,
                        className: 'text-center',
                        render: function (data, type, row) {
                            return '<button class="btn btn-danger btn-sm" onclick="deleteReservation(' + row.Id + ')">🗑 Delete</button>';
                        }, width: '8%'
                    }
                ],
                columnDefs: [
                    {
                        targets: 1,
                        className: 'text-left'
                    },
                    {
                        targets: [0, 7],
                        orderable: false
                    }
                ],
                pageLength: 5,
                lengthMenu: [[5, 10, 25, 50, 100], [5, 10, 25, 50, 100]],
                responsive: true,
                language: {
                    search: "Search:  ",
                    emptyTable: "No record(s) available",
                    "lengthMenu": "_MENU_ Records per page",
                    "info": "_START_ - _END_ of _TOTAL_ record(s) is displayed"
                }
            });

            setTimeout(() => {
                Loader.hide();
            }, 1000);
        }
        function isValidDate(dateStr) {
            const d = new Date(dateStr);
            return !isNaN(d.getTime()) && d >= new Date('1753-01-01') && d <= new Date('9999-12-31');
        }

        $('#startDateInput, #endDateInput').on('change', function () {
            const startDate = $('#startDateInput').val();
            const endDate = $('#endDateInput').val();

            if (isValidDate(startDate) && isValidDate(endDate)) {
                populateOrder();
            }
        });

        $('#startDateReservation, #endDateReservation').on('change', function () {
            const startDate = $('#startDateReservation').val();
            const endDate = $('#endDateReservation').val();

            if (isValidDate(startDate) && isValidDate(endDate)) {
                populateReservation();
            }
        });

        // Add Order
        function addOrder() {
            document.getElementById('btnOrderAdd').innerHTML = "🞧 Adding...";
            $('#btnOrderAdd').prop('disabled', true);
            $('#btnOrderClose').prop('disabled', true);

            $.ajax({
                type: "POST",
                url: '/api/order/add',
                contentType: "application/json; charset=utf-8",
                statusCode: {
                    200: function (id) {
                        window.location = '/Software/OrderDetail?id=' + id;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404", { positionClass: "toast-bottom-right" });
                        document.getElementById('btnOrderAdd').innerHTML = "🞧 Add";
                        $('#btnOrderAdd').prop('disabled', false);
                        $('#btnOrderClose').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400", { positionClass: "toast-bottom-right" });
                        document.getElementById('btnOrderAdd').innerHTML = "🞧 Add";
                        $('#btnOrderAdd').prop('disabled', false);
                        $('#btnOrderClose').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500", { positionClass: "toast-bottom-right" });
                        document.getElementById('btnOrderAdd').innerHTML = "🞧 Add";
                        $('#btnOrderAdd').prop('disabled', false);
                        $('#btnOrderClose').prop('disabled', false);
                    }
                }
            });
        }

        // Add Order Reservation
        function addOrderReservation(resId) {
            orderReservationId = resId;
            $('#addOrderConfirmModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnConfirmAddOrder').innerHTML = "✅ Confirm";
            $('#btnConfirmAddOrder').prop('disabled', false);
            $('#btnConfirmCloseAddOrder').prop('disabled', false);
        }

        // Confirm Order Reservation
        function confirmAddOrderReservation() {
            document.getElementById('btnConfirmAddOrder').innerHTML = "🞧 Adding...";
            $('#btnConfirmAddOrder').prop('disabled', true);
            $('#btnConfirmCloseAddOrder').prop('disabled', true);

            $.ajax({
                type: "POST",
                url: '/api/orderReservation/add/' + orderReservationId,
                contentType: "application/json; charset=utf-8",
                statusCode: {
                    200: function (id) {
                        $('#addOrderConfirmModal').modal('hide');
                        window.location = '/Software/OrderDetail?id=' + id;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404", { positionClass: "toast-bottom-right" });
                        document.getElementById('btnConfirmAddOrder').innerHTML = "✅ Confirm";
                        $('#btnConfirmAddOrder').prop('disabled', false);
                        $('#btnConfirmCloseAddOrder').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400", { positionClass: "toast-bottom-right" });
                        document.getElementById('btnConfirmAddOrder').innerHTML = "✅ Confirm";
                        $('#btnConfirmAddOrder').prop('disabled', false);
                        $('#btnConfirmCloseAddOrder').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500", { positionClass: "toast-bottom-right" });
                        document.getElementById('btnConfirmAddOrder').innerHTML = "✅ Confirm";
                        $('#btnConfirmAddOrder').prop('disabled', false);
                        $('#btnConfirmCloseAddOrder').prop('disabled', false);
                    }
                }
            });
        }

        // Edit Order
        function editOrder(orderId) {
            window.location = '/Software/OrderDetail?id=' + orderId;
        }

        // Delete Order
        function deleteOrder(orderId, isLocked) {
            Id = orderId;
            if (isLocked) {
                toastr.error("Please unlock the record first before deleting...", "", { positionClass: "toast-bottom-right" });
            } else {
                $('#deleteOrderConfirm').modal({
                    show: true,
                    backdrop: 'static'
                });

                document.getElementById('btnOrderConfirmDelete').innerHTML = "🗑 Delete";
                $('#btnOrderConfirmDelete').prop('disabled', false);
                $('#btnOrderCloseConfirmDelete').prop('disabled', false);
            }
        }

        // Confirm Delete Order
        function confirmDeleteOrder() {
            document.getElementById('btnOrderConfirmDelete').innerHTML = "🗑 Deleting...";
            $('#btnOrderConfirmDelete').prop('disabled', true);
            $('#btnOrderCloseConfirmDelete').prop('disabled', true);

            $.ajax({
                url: '/api/order/delete/' + Id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful", "", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderConfirm').modal('hide');
                        populateOrder();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderConfirm').modal('hide');
                        document.getElementById('btnOrderConfirmDelete').innerHTML = "🗑 Delete";
                        $('#btnOrderConfirmDelete').prop('disabled', false);
                        $('#btnOrderCloseConfirmDelete').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderConfirm').modal('hide');
                        document.getElementById('btnOrderConfirmDelete').innerHTML = "🗑 Delete";
                        $('#btnOrderConfirmDelete').prop('disabled', false);
                        $('#btnOrderCloseConfirmDelete').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderConfirm').modal('hide');
                        document.getElementById('btnOrderConfirmDelete').innerHTML = "🗑 Delete";
                        $('#btnOrderConfirmDelete').prop('disabled', false);
                        $('#btnOrderCloseConfirmDelete').prop('disabled', false);
                    }
                }
            });
        }

        // Delete Order Reservation
        function deleteReservation(resId) {
            reservationId = resId;
            $('#deleteOrderReservationConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnOrderReservationConfirmDelete').innerHTML = "🗑 Delete";
            $('#btnOrderReservationConfirmDelete').prop('disabled', false);
            $('#btnOrderReservationCloseConfirmDelete').prop('disabled', false);
        }

        // Confirm Delete Order Reservation
        function confirmDeleteReservation() {
            document.getElementById('btnOrderReservationConfirmDelete').innerHTML = "🗑 Deleting...";
            $('#btnOrderReservationConfirmDelete').prop('disabled', true);
            $('#btnOrderReservationCloseConfirmDelete').prop('disabled', true);

            $.ajax({
                url: '/api/reservation/delete/' + reservationId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful", "", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderReservationConfirm').modal('hide');
                        populateReservation();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderReservationConfirm').modal('hide');
                        document.getElementById('btnOrderReservationConfirmDelete').innerHTML = "🗑 Delete";
                        $('#btnOrderReservationConfirmDelete').prop('disabled', false);
                        $('#btnOrderReservationCloseConfirmDelete').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderReservationConfirm').modal('hide');
                        document.getElementById('btnOrderReservationConfirmDelete').innerHTML = "🗑 Delete";
                        $('#btnOrderReservationConfirmDelete').prop('disabled', false);
                        $('#btnOrderReservationCloseConfirmDelete').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500", { positionClass: "toast-bottom-right" });
                        $('#deleteOrderReservationConfirm').modal('hide');
                        document.getElementById('btnOrderReservationConfirmDelete').innerHTML = "🗑 Delete";
                        $('#btnOrderReservationConfirmDelete').prop('disabled', false);
                        $('#btnOrderReservationCloseConfirmDelete').prop('disabled', false);
                    }
                }
            });
        }

        //View Reservation Detail
        function viewReservationDetail(reservationId) {
            $('#resDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#resDetailModalLoading").show();
            document.getElementById("resDetailModalLoading").innerHTML = 'Loading...';
            $("#resDetailModalContent").hide();

            document.getElementById("resDetailModalTitle").innerHTML = 'Order Reservation Detail';

            $("#btnReservationDetailCloseModal").prop("disabled", false);

            $.ajax({
                url: '/api/reservation/detail/' + reservationId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results != null) {
                        document.getElementById('resDetailReservationNumber').value = results.ReservationNumber;

                        flatpickr("#resDetailReservedDate", {
                            dateFormat: "Y-m-d",
                            minDate: "1753-01-01",
                            maxDate: "9999-12-31",
                            disableMobile: true
                        });

                        flatpickr("#resDetailDeliveryDate", {
                            dateFormat: "Y-m-d",
                            minDate: "1753-01-01",
                            maxDate: "9999-12-31",
                            disableMobile: true
                        });

                        const reservedDate = new Date(results.ReservedDate);
                        const formattedReservedDate = reservedDate.getFullYear() + '-' +
                            String(reservedDate.getMonth() + 1).padStart(2, '0') + '-' +
                            String(reservedDate.getDate()).padStart(2, '0');
                        document.querySelector("#resDetailReservedDate")._flatpickr.setDate(formattedReservedDate);

                        const deliveryDate = new Date(results.DeliveryDate);
                        const formattedDeliveryDate = deliveryDate.getFullYear() + '-' +
                            String(deliveryDate.getMonth() + 1).padStart(2, '0') + '-' +
                            String(deliveryDate.getDate()).padStart(2, '0');
                        document.querySelector("#resDetailDeliveryDate")._flatpickr.setDate(formattedDeliveryDate);

                        document.getElementById('resDetailDeliveryTime').value = results.DeliveryTime;
                        flatpickr("#resDetailDeliveryTime", {
                            enableTime: true,
                            noCalendar: true,
                            dateFormat: "h:i K", // 12-hour format with AM/PM
                            time_24hr: false,
                            defaultDate: results.DeliveryTime
                        });

                        document.getElementById('resDetailAddress').value = results.Address;
                        document.getElementById('resDetailCustomerName').value = results.CustomerName;
                        document.getElementById('resDetailOrder').value = results.ItemOrder;
                        document.getElementById('resDetailContactNumber').value = results.ContactNumber;
                        document.getElementById('resDetailLandmark').value = results.Landmark;
                        document.getElementById('resDetailLookFor').value = results.LookFor;

                        document.getElementById('resDetailReservationNumber').disabled = true;
                        document.getElementById('resDetailReservedDate').disabled = true;
                        document.getElementById('resDetailDeliveryDate').disabled = true;
                        document.getElementById('resDetailDeliveryTime').disabled = true;
                        document.getElementById('resDetailAddress').disabled = true;
                        document.getElementById('resDetailCustomerName').disabled = true;
                        document.getElementById('resDetailOrder').disabled = true;
                        document.getElementById('resDetailContactNumber').disabled = true;
                        document.getElementById('resDetailLandmark').disabled = true;
                        document.getElementById('resDetailLookFor').disabled = true;

                        $("#resDetailModalLoading").hide();
                        $("#resDetailModalContent").show();
                    } else {
                        alert("No Data");
                        window.location = "/Software/OrderList";
                    }
                }
            });
        }

        function initializeDateFilters() {
            const today = new Date();
            const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
            const lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

            flatpickr("#startDateInput", {
                dateFormat: "Y-m-d",
                defaultDate: firstDayOfMonth,
                minDate: "1753-01-01",
                maxDate: "9999-12-31",
                disableMobile: true
            });


            flatpickr("#endDateInput", {
                dateFormat: "Y-m-d",
                defaultDate: lastDayOfMonth,
                minDate: "1753-01-01",
                maxDate: "9999-12-31",
                disableMobile: true
            });

            populateOrder();
        }

        function initializeDateFiltersReservations() {
            const today = new Date();
            const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
            const lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);

            flatpickr("#startDateReservation", {
                dateFormat: "Y-m-d",
                defaultDate: firstDayOfMonth,
                minDate: "1753-01-01",
                maxDate: "9999-12-31",
                disableMobile: true
            });


            flatpickr("#endDateReservation", {
                dateFormat: "Y-m-d",
                defaultDate: lastDayOfMonth,
                minDate: "1753-01-01",
                maxDate: "9999-12-31",
                disableMobile: true
            });

            populateReservation();
        }

        document.querySelectorAll('.calendar-button').forEach(function (btn) {
            btn.addEventListener('click', function () {
                const targetInput = document.querySelector(this.dataset.target);
                if (targetInput && targetInput._flatpickr) {
                    targetInput._flatpickr.open();
                }
            });
        });

        // Close Order
        function closeOrder() {
            window.location = '/Software';
        }

        // View Reservations
        function viewReservations() {
            $('#reservationModal').modal({
                show: true,
                backdrop: 'static'
            });

            initializeDateFiltersReservations();
        }

        // On Load Page
        $(document).ready(function () {
            initializeDateFilters();
        });
    </script>
    <div id="loader-overlay">
        <div class="loader-circle"></div>
    </div>
</body>
</html>